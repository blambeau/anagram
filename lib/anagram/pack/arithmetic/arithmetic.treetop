module Anagram
  module Pack
    module Arithmetic
    
      # Grammar for arithmetic expressions
      grammar ArithmeticGrammar
      
        ### Main rules ####################################################
        rule expression
          additive                                             <SyntaxTree>
        end
        
        ### Additive, Multitive and Primary ###############################
        rule additive
            left:multitive op:plus_sym right:additive               <Plus>
          / left:multitive op:minus_sym right:additive             <Minus>
          / multitive
        end
        rule multitive
            left:primary op:times_sym right:multitive               <Times>
          / left:primary op:div_sym right:multitive                <Divide>
          / primary
        end
        rule primary
            variable                                             <Variable>
          / number                                                 <Number>
          / openpar_sym expr:additive closepar_sym          <Parenthesized>
        end

        ### Numbers and variables #########################################
        rule variable
          [a-z]+ spacing
        end
        rule number
          ([1-9] [0-9]* spacing) / ('0' spacing)
        end
        
        ### Keywords and symbols ##########################################
        rule plus_sym
          '+' spacing                                            <Operator>
        end
        rule minus_sym
          '-' spacing                                            <Operator>
        end
        rule times_sym
          '*' spacing                                            <Operator>
        end
        rule div_sym
          '/' spacing                                            <Operator>
        end
        rule openpar_sym
          '(' spacing
        end
        rule closepar_sym
          ')' spacing
        end
  
        ### Spaces ########################################################
        rule spacing
          # eat all spaces
          [\s]*           
        end
      
      end
      
    end
  end
end